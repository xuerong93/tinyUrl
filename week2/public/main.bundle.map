{"version":3,"sources":["webpack:///./src/app/services/url.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about.component.ts","webpack:///./src/app/components/home.component.ts","webpack:///./src/app/components/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/about.component.html","webpack:///./src/app/components/home.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable} from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\r\nimport { Observable} from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\nimport {UrlSet} from '../components/index';\r\n\r\n\r\n@Injectable()\r\nexport class UrlService{\r\n  constructor(private http: Http){}\r\n\r\n  getShortUrl(longUrl: string): Observable<UrlSet>{\r\n    const headers = new Headers({'Content-type' : 'application/json'});\r\n    const options = new RequestOptions({headers: headers});\r\n\r\n    return this.http.post('api/v1/urls',{longUrl: longUrl}, options)\r\n                .map(this.extractUrlSet)\r\n                .catch(this.handleError);\r\n  }\r\n\r\n  extractUrlSet(res: Response){\r\n    let body =res.json();\r\n    return body as UrlSet || {};\r\n  }\r\n\r\n  handleError(error: Response | any){\r\n  //TODO: add error handling\r\n    console.log('error');\r\n    return Observable.throw(error);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/url.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 426;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 426\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AboutComponent, HomeComponent} from './components/index';\n\nimport {UrlService} from './services/url.service';\n\nconst appRoutes: Routes=[\n  {path: '', component: HomeComponent},\n  {path: 'client/about', component: AboutComponent },\n  {path: 'client/home', redirectTo: '/'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [UrlService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n})\r\nexport class AboutComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/about.component.ts","import { Component } from '@angular/core';\r\nimport { UrlService} from '../services/url.service';\r\n\r\nexport class UrlSet{\r\n  longUrl: string;\r\n  shortUrl: string;\r\n}\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent {\r\n  longUrl: string;\r\n  shortUrl: string;\r\n\r\n  constructor(private urlService: UrlService){\r\n\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log('happy new year' + this.longUrl);\r\n    this.urlService.getShortUrl(this.longUrl)\r\n        .subscribe(\r\n          result =>{\r\n            this.shortUrl = result.shortUrl;\r\n            console.log('short url is ' + this.shortUrl);\r\n          },\r\n          error =>{\r\n            console.log(error);     //TODO: debug only\r\n          }\r\n        )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home.component.ts","export * from './home.component';\r\nexport * from './about.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/index.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 703\n// module chunks = 0","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <!-- Brand and toggle get grouped for better mobile display -->\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\r\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n        </button>\\r\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"client/home\\\">TinyUrl</a>\\r\\n      </div>\\r\\n\\r\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n          <li><a routerLink=\\\"/client/about\\\">About us</a></li>\\r\\n        </ul>\\r\\n      </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n  </nav>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 704\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\r\\n    <p>Contact us</p>\\r\\n    <h6>hupodeshuo@gmail.com</h6>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about.component.html\n// module id = 705\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <h4 for=\\\"longUrlInput\\\">Input your Long Url></h4>\\r\\n        <input name=\\\"longUrlInput\\\" type=\\\"text\\\" [(ngModel)]=\\\"longUrl\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter your long url\\\" required>\\r\\n      </div>\\r\\n      <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Get your Short Url\\\"/>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home.component.html\n// module id = 706\n// module chunks = 0"],"sourceRoot":""}